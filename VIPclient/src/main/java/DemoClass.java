import org.carmin.client.*;
import org.carmin.client.api.DefaultApi;
import org.carmin.client.model.Execution;
import org.carmin.client.model.Path;
import org.carmin.client.model.Pipeline;

import java.io.File;
import java.util.*;

/**
 * Created by abonnet on 4/23/18.
 * Subsequently modified by GM... for better or worse
 */

public class DemoClass {

    public static void main(String[] args) throws ApiException {

        /********** INIT API CLIENT ***********/

        ApiClient vipApiClient = new ApiClient();
        vipApiClient.setApiKey("l6uf3opn55b5ltrkok6pd7olll");// Key GM
        vipApiClient.setBasePath("http://vip.creatis.insa-lyon.fr/rest");
        DefaultApi vipApi = new DefaultApi(vipApiClient);


        /********** PRELIMINARY TEST ***********/

        // List available pipelines
    /*
        List<Pipeline> pipelineList = vipApi.listPipelines(null, null, null);
        System.out.println(pipelineList);
    */

        // Get info on a given pipeline (here: GateLab/0.4.7)
        // Allows to know (amongst other things) name and type of expected parameters

    /*
        Pipeline pipelineInfo = vipApi.getPipeline("GateLab%2F0.4.7");
        System.out.println(pipelineInfo);
    */


        /********** ADDITION TEST ***********/
    /*

        Execution execution = new Execution();
        execution.setPipelineIdentifier("AdditionTest/0.9");
        Map<String, Object> inputValues = new HashMap<>();
        inputValues.put("results-directory", "/vip/Home");
        inputValues.put("number1", "4");
        inputValues.put("number2", "9");
        execution.setInputValues(inputValues);
        execution.setName("AdditionTest001");

        execution = vipApi.initExecution(execution);
        System.out.println(execution.getIdentifier());
    */

        /********** SPLIT TEST ***********/
    /*
        // upload file
        //vipApi.createDirectory("/vip/Home/2018-06-21_splitTest/");
        //vipApi.uploadPathBinary("/vip/Home/2018-06-21_splitTest/fileToSplit.txt", new File("/home/gate/textToSplit.txt"));

        // Set pipeline & input parameters
        Execution execution = new Execution();
        execution.setPipelineIdentifier("Split/1.1");
        Map<String, Object> inputValues = new HashMap<>();
        inputValues.put("results-directory", "/vip/Home/2018-06-21_splitTest/");
        inputValues.put("fileToSplit", "/vip/Home/2018-06-21_splitTest/fileToSplit.txt");

        // execute pipeline
        execution.setInputValues(inputValues);
        execution.setName("SplitTest001");
        execution = vipApi.initExecution(execution);
        System.out.println(execution.getIdentifier());

        // get outputs

        Pipeline execution = vipApi.getPipeline("Split%2F1.1");
        System.out.println(execution);
    */

    /********** GATELAB TEST ***********/

        // Create directory and upload input zip file (alternatively, we can use an input file generated by GateLab through the portal)
        //vipApi.createDirectory("/vip/Home/2018-07-23_GateLabAPITest/");
        //vipApi.uploadPathBinary("/vip/Home/myGateSimus/inputs/GateInputU07.zip", new File("/home/gate/GateInputU07.zip"));


        // Set pipeline & input parameters
        Execution execution = new Execution();
        execution.setPipelineIdentifier("GateLab/0.4.7");
        Map<String, Object> inputValues = new HashMap<>();

        // param 1: CPUestimation
        // type: String
        // description: an estimation of the total running time of your simulation on a single machine. This parameter is used to determine the number of jobs into which your simulation will be split.
        // 1 => 1 job
        // 2 => 25 jobs
        // 3 => 100 jobs
        // 4 => 500 jobs
        inputValues.put("CPUestimation", "1");

        // param 2: GateInput
        // type: String
        // description: a zip file produced by the GATE-Lab containing all your simulation input files.
        inputValues.put("GateInput", "/vip/Home/myGateSimus/inputs/GateInputU07.zip");

        // param 3: GateRelease
        // type: String
        // description: the release of the GATE simulator that will be used to run your simulation. Contact the admins if you're looking for a release which is not available.
        inputValues.put("GateRelease", "/grid/biomed/creatis/vip/data/groups/GateLab/releases/gate_release_8.1p01_light.tar.gz");

        // param 4: NumberOfParticles
        // type: String
        // description: the number of events found in your macro file.
        inputValues.put("NumberOfParticles", "10000");

        // param 5: ParallelizationType
        // type: String
        // description: using dynamic mode is faster but it can compromise the validity of your simulation.
        inputValues.put("ParallelizationType", "static");


        execution.setInputValues(inputValues);
        execution.setName("GM_OpenDose_TestU07");

        execution = vipApi.initExecution(execution);
        System.out.println(execution.getIdentifier());


    }


}
